# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js v22
        uses: actions/setup-node@v6
        with:
          node-version: 22
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install document dependencies
        run: bun install
        working-directory: ${{ inputs.build_path }}
      - name: Build
        run: bun run build
        working-directory: .
      - name: Unit Test
        run: bun run test:report
        working-directory: .

      # e2e テストレポート
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        working-directory: apps/frontend
      - name: Start Frontend
        run: |
          bunx --bun vite preview --port 5173 > frontend.log 2>&1 &
          echo $! > ../frontend.pid
        working-directory: apps/frontend
      - name: Start Frontend
        run: bun run test:e2e
        working-directory: apps/frontend

        # コンポーネントカタログ
      - name: Build Component Catalog
        run: bun run build-storybook
        working-directory: ./packages/ui

        # デプロイ用の出力フォルダをパッケージ
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: apps/frontend/dist
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
